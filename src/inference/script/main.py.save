#!/usr/bin/env python3

import rospy
# cv send image shit
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
# inference
from config import config
from preprocess.maxsizeproc import MaxSizePreprocessor
from predict.classes import get_class_name
from predict.tf_model import TFModel
from predict.ui import draw_bbox
# std lib
import cv2
from keras.applications.vgg16 import VGG16
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input
import numpy as np
from keras.applications.vgg19 import VGG19
from keras.preprocessing import image
from keras.applications.vgg19 import preprocess_input
from keras.models import Model
import numpy as np

model = VGG19(weights='imagenet', include_top=False)
proc = MaxSizePreprocessor(224)


def predict(msg):
    rospy.loginfo("get image")
    img = CvBridge().imgmsg_to_cv2(msg)

    rospy.loginfo("predicting...")
    img = proc.preprocess(img)
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    rospy.loginfo("predicting...")
    features = model.predict(x)
    rospy.loginfo(f"{features}")


if __name__ == '__main__':
    cv2.namedWindow('Image', cv2.WINDOW_AUTOSIZE)
    rospy.init_node('mike_inference', anonymous=True)
    rospy.Subscriber('mike_camera/raw', Image, predict)
    rospy.spin()
